# -*- coding: utf-8 -*-
"""lab8_B20ME027.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/14-CCoXgFWSS97K2G3gRVQc6ksUxH2nU8
"""

import numpy as np
import pandas as pd

df=pd.read_csv('milk.csv')
df.head()
labelList=df.iloc[:,0]
X2=df.iloc[:,1:]
X1=df.drop(columns=['Unnamed: 0'])
X=X1.to_numpy()

from scipy.cluster.hierarchy import dendrogram, linkage
from matplotlib import pyplot as plt
linked = linkage(X2, 'average')
plt.figure(figsize=(10, 10))
dendrogram(linked)
plt.show()

from sklearn.cluster import AgglomerativeClustering
cluster1 = AgglomerativeClustering(n_clusters=2, affinity='euclidean', linkage='average')
cluster1.fit_predict(X)

plt.scatter(X[:,0],X[:,1], c=cluster1.labels_, cmap='rainbow')

cluster2 = AgglomerativeClustering(n_clusters=3, affinity='euclidean', linkage='single')
cluster2.fit_predict(X)

plt.scatter(X[:,0],X[:,1], c=cluster2.labels_, cmap='rainbow')

cluster3 = AgglomerativeClustering(n_clusters=4, affinity='euclidean', linkage='ward')
cluster3.fit_predict(X)

plt.scatter(X[:,0],X[:,1], c=cluster3.labels_, cmap='rainbow')



K=4
centroids=X[3:K+3,:]

for w in range(1400):
 initial_cluster=[]
 index=[]
 for i in range(X.shape[0]):
       l=[]
       for j in range(centroids.shape[0]):
           dist=0
           dist+=np.sqrt(np.sum(np.square(X[i,]-centroids[j])))
           l.append(dist)
       initial_cluster.append([np.argmin(l),centroids[np.argmin(l),:],i])
       index.append(np.argmin(l))
 p=np.array(initial_cluster)
 m=[]
 l1=[] 
 cl={}
 for i in index:
     if i not in m:
         m.append(i)
 for j in m:
  l1=[]
  for k in range(X.shape[0]):
     if p[k,0]==j:
        l1.append(X[p[k,2]])
  cl[j]=np.array(l1)
 
 for key, value in cl.items():
   centroids[key]=((cl[key]).mean(axis=0))
y=p[:,0]

y



plt.scatter(X[:,0],X[:,1],c=y,s=50,cmap='rainbow')

plt.scatter(centroids[:,0],centroids[:,1],c='black')

